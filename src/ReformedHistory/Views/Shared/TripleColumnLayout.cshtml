@using ReformedHistory.Common.Services
@inject IdService ids

@{
    Layout = "_Layout";

    var id = ids.GetUniqueId();
}

<div id="@id">
    <div class="GridContainerContainer">
        <div class="TitleContainer">
            <div class="TitleWrapper">
                @await RenderSectionAsync("Title", false)
            </div>
        </div>
        
        <div class="GridContainer1Wrapper">
            <div class="GridContainer1">
                <div class="LeftSidebar">
                    <div class="LeftWrapper">
                        @await RenderSectionAsync("Sidebar1", false)
                    </div>
                </div>
                <div class="RightSidebar">
                    <div class="RightWrapper">
                        @await RenderSectionAsync("Sidebar2", false)
                    </div>
                </div>
            </div>
        </div>

        <div class="GridContainer2">
            <div class="MainColumn">
                <div class="MainWrapper">
                    @RenderBody()
                </div>
            </div>
        </div>
    </div>

    <style>              
        #@id {
            margin-left: auto;
            margin-right: auto;        
            max-width: calc(@CssConstants.MainContentWidth * 2);            
        
            .TitleContainer {
                width: 100%;
                display: grid;
                grid-template-columns: @CssConstants.SidebarSize @CssConstants.MainContentWidth;              
            }
            
            .TitleWrapper {
                margin: 1rem;
                grid-column: 2;
            }
            
            .GridContainerContainer {
                position: relative;
                width: 100%;
                height: 100%;
                z-index: 0;
            }
            
            .GridContainer1, .GridContainer2 {                
                background-color: transparent;   
                display: grid;         
                justify-items: center;
            }            
            
            .GridContainer1 {                
                align-content: flex-start;
                grid-template-columns: @CssConstants.SidebarSize @CssConstants.MainContentWidth @CssConstants.SidebarSize;
            }
            
            .GridContainer2 {
                grid-template-columns: 0 @CssConstants.MainContentWidth 0;
                max-width: @CssConstants.MainContentWidth;
                margin-right: auto;
                margin-left: auto;
            }

            .GridContainer1Wrapper {
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                z-index: -10;
            }

            .LeftSidebar {
                grid-column: 1;     
                width: calc(min(100%, @CssConstants.MainContentWidth / 2));                 
                position: fixed;
                top: @CssConstants.HeaderHeight;
                left: calc((100vw - @CssConstants.MainContentWidth * 2) / 2);  
                z-index: 10;  
            }
            
            .LeftWrapper, .RightWrapper {
                margin: 1rem;
                margin-top: 0;
                padding-top: 1rem;                
            }
            
            .LeftWrapper {
                overflow-y: auto;
                max-height: calc(100vh - @CssConstants.HeaderHeight - 1rem);
            }
            
            .RightSidebar {
                grid-column: 3;
                width: calc(min(100%, @CssConstants.MainContentWidth / 2));    
            }
            
            .MainColumn {
                grid-column: 2;
                width: 100%;
            }           
            
            .MainWrapper {
                margin: 1rem;
            }
        }

        @@media (@Html.Raw(CssConstants.TwoColumnsMediaQuery)) {
            #@id {                
                max-width: calc(1.5 * @CssConstants.MainContentWidth);
            
                .GridContainer2 {
                    grid-template-columns: @CssConstants.SidebarSize @CssConstants.MainContentWidth;
                    max-width: unset;
                    margin-right: unset;
                    margin-left: unset;
                }
                
                .GridContainer1 {
                    position: static;
                    grid-template-columns: calc(100% - 1rem);
                    overflow-y: auto;
                    max-height: calc(100vh - @CssConstants.HeaderHeight);
                    
                }
                
                .GridContainer1Wrapper {
                    width: calc(min(100%, @CssConstants.MainContentWidth / 2 - 1rem));                 
                    position: fixed;
                    top: @CssConstants.HeaderHeight;
                    left: calc((100vw - @CssConstants.MainContentWidth * 1.5) / 2);  
                    z-index: 10;     
                }
                
                .LeftSidebar {
                    position: static;
                    top: unset;
                    left: unset;                   
                }
                
                .LeftWrapper, .RightWrapper {
                    overflow-y: unset;
                    max-height: unset;
                    margin-right: 0;
                }
            
                .RightSidebar {
                    grid-column: 1;
                }                
            }           
        }

        @@media (@Html.Raw(CssConstants.OneColumnMediaQuery)) {
            #@id {                
                max-width: calc(min(100%, @CssConstants.MainContentWidth));
            
                .GridContainer1Wrapper, .GridContainer2 {
                    position: static;
                }
                
                .GridContainer1Wrapper {
                    width: unset;                 
                    position: static;
                    top: unset;
                    left: unset;  
                }
                
                .GridContainer1 {
                    grid-template-columns: @CssConstants.SidebarSize @CssConstants.SidebarSize;                    
                    margin: 0;
                    overflow-y: unset;
                    max-height: unset;
                }
                
                .GridContainer2, .TitleContainer {
                    grid-template-columns: @CssConstants.MainContentWidth;
                }
                
                .RightSidebar {
                    grid-column: 2;
                }
                
                .MainColumn {
                    grid-column: 1;
                }    
                
                .TitleWrapper {
                    grid-column: 1;
                    text-align: center;
                }
                
                .LeftWrapper, .RightWrapper {
                    margin-right: 1rem;
                }
            }           
        }

        @@media (@Html.Raw(CssConstants.SubOneColumnMediaQuery)) {
            #@id {                
                .GridContainer1, .GridContainer2, .TitleContainer {
                    grid-template-columns: calc(min(100%, @CssConstants.MainContentWidth));
                }
                
                .RightSidebar {
                    grid-column: 1;
                }
            }           
        }
    </style>
</div>