@{
    Layout = "_Layout";
}

<div>
    <div class="GridContainer1">
        <div class="LeftSidebar">
            <div class="LeftWrapper">
                @await RenderSectionAsync("Sidebar1", false)
            </div>
        </div>
        <div class="RightSidebar">
            <div class="LeftWrapper">
                @await RenderSectionAsync("Sidebar2", false)
            </div>
        </div>
    </div>
    
    <div class="GridContainer2">
        <div class="MainColumn">
            <div class="MainWrapper">
                @RenderBody()
            </div>
        </div>
    </div>
    
    <style>              
        me {
            margin-left: auto;
            margin-right: auto;         
            position: relative;
            max-width: calc(@CssConstants.MainContentWidth * 2);
            
            .GridContainer1, .GridContainer2 {
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background-color: transparent;   
                display: grid;         
                grid-template-columns: @CssConstants.SidebarSize @CssConstants.MainContentWidth @CssConstants.SidebarSize;
                justify-items: center;
            }            

            .LeftSidebar {
                grid-column: 1;     
                width: calc(@CssConstants.MainContentWidth / 2);    
                
                position: fixed;
                top: @CssConstants.HeaderHeight;
                left: calc((100vw - @CssConstants.MainContentWidth * 2) / 2 - 1rem);       
            }
            
            .LeftWrapper {
                margin: 1rem;
                overflow-y: scroll;
                max-height: calc(100vh - @CssConstants.HeaderHeight - 1rem);
            }
            
            .RightSidebar {
                grid-column: 3;
                width: 100%;
            }
            
            .RightWrapper {
                margin: 1rem;
            }
            
            .MainColumn {
                grid-column: 2;
                width: 100%;
            }           
            
            .MainWrapper {
                margin: 1rem;
            }
        }

        @@media (@Html.Raw(CssConstants.TwoColumnsMediaQuery)) {
            me {                
                max-width: calc(1.5 * @CssConstants.MainContentWidth);
            
                .GridContainer1, .GridContainer2 {
                    grid-template-columns: @CssConstants.SidebarSize @CssConstants.MainContentWidth;
                }
                
                .LeftSidebar {
                    position: static;
                    top: unset;
                    left: unset;                   
                }
                
                .LeftWrapper {
                    overflow-y: unset;
                    max-height: unset;
                }
            
                .RightSidebar {
                    grid-column: 1;
                }    
            }           
        }

        @@media (@Html.Raw(CssConstants.OneColumnMediaQuery)) {
            me {                
                max-width: calc(min(100%, @CssConstants.MainContentWidth));
            
                .GridContainer1, .GridContainer2 {
                    position: static;
                }
                
                .GridContainer1 {
                    grid-template-columns: @CssConstants.SidebarSize @CssConstants.SidebarSize;
                }
                
                .GridContainer2 {
                    grid-template-columns: @CssConstants.MainContentWidth;
                }
                
                .RightSidebar {
                    grid-column: 2;
                }
                
                .MainColumn {
                    grid-column: 1;
                }    
            }           
        }

        @@media (@Html.Raw(CssConstants.SubOneColumnMediaQuery)) {
            me {                
                .GridContainer1, .GridContainer2 {
                    grid-template-columns: calc(min(100%, @CssConstants.MainContentWidth));
                }
                
                .RightSidebar {
                    grid-column: 1;
                }
            }           
        }
    </style>
</div>