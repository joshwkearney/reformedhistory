@using ReformedHistory.Common.Services
@inject IdService ids
@{
    var bodyId = ids.GetUniqueId();
}

<!DOCTYPE html>
<html lang="en" style="scroll-padding-top: calc(@CssConstants.HeaderHeight + 1rem);">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <link rel="stylesheet" href="~/css/reset.css" asp-append-version="true" />
    <link rel="icon" href="~/img/favicon.svg">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=EB+Garamond:ital,wght@0,400..800;1,400..800&display=swap" rel="stylesheet">
</head>
<body id="@bodyId">

<style>
    #@bodyId {
        max-height: calc(100vh - @CssConstants.HeaderHeight);
        overflow-y: scroll;
        overflow-x: clip;
        position: relative;
        background-color: @CssConstants.BodyBackgroundColor;
        padding-top: @CssConstants.HeaderHeight;

        header {
            width: 100%;
            height: @CssConstants.HeaderHeight;
            position: fixed;
            top: 0;
            background-color: @CssConstants.HeaderColor;
            z-index: 1000;
        }

        .TopNavigation {
            max-width: calc(@CssConstants.MainContentWidth - 2rem);
            margin-left: auto;
            margin-right: auto;
            padding-left: 1rem;
            padding-right: 1rem;
            height: 100%;
            display: flex;
            flex-direction: row;
            align-items: center;
            position: relative;

            .LeftFlourish, .RightFlourish {
                position: absolute;
                height: 1.25rem;
                width: auto;
                display: none;
            }

            .LeftFlourish {
                right: calc(100% + 1.5rem);
            }

            .RightFlourish {
                left: calc(100% + 1.5rem);
            }

            @@media (@CssConstants.TwoColumnsMediaQuery) {            
                max-width: calc(min(@CssConstants.MainContentWidth * 1.5 - 2rem, 100% - 2rem));
            }

            @@media (max-width: calc(@CssConstants.MainContentWidth + 350px)) {            
                .LeftFlourish, .RightFlourish {
                    display: none;
                }
            }

            a {
                font-size: 16pt;
                line-height: 18pt;
                font-family: @Html.Raw(CssConstants.DocumentFont);
                text-decoration: none;
                color: @CssConstants.HighlightColor;
                margin-right: 1.5rem;
                flex-grow: 0;
            }

            a:last-of-type {
                margin-right: 0;
            }

            a:hover {
                text-decoration: underline;
            }

            a.SiteLink {
                font-style: italic;
            }

            .Expander {
                flex-grow: 1;
            }
            
            .HamburgerMenu {                
                width: 1.25rem;
                height: @CssConstants.HeaderHeight;
                position: relative;
                margin-right: 1.25rem;
                display: none;
                
                input[type=checkbox] {
                    display: none;
                }
                
                .Line1, .Line2, .Line3 {
                    margin: 0;
                    border: none;
                    background-color: white;
                    height: 1px;
                    width: 1.25rem;
                    position: absolute;
                    left: 0;
                    right: 0;
                    
                    transition: 
                        top 150ms ease-in-out,
                        bottom 150ms ease-in-out, 
                        left 150ms ease-in-out, 
                        width 150ms ease-in-out, 
                        opacity 150ms ease-in-out,
                        transform 150ms ease-in-out;
                }
                
                .Line1 {
                    top: calc((100% - 1.25rem) / 2);
                }
                
                .Line2 {
                    top: 50%;
                }
                
                .Line3 {
                    top: calc((100% - 1.25rem) / 2 + 1.25rem);
                }
                
                .MobileNavigation {
                    position: fixed;
                    top: @CssConstants.HeaderHeight;
                    bottom: 0;
                    left: 0;
                    right: 0;
                    background-color: @CssConstants.GoldColor;
                    justify-content: center;
                    align-items: flex-start;
                    display: flex;
                    visibility: hidden;
                    opacity: 0;
                    color: black;
                    
                    transition: 
                        visibility 100ms ease-in-out,
                        opacity 100ms ease-in-out;
                        
                    .MobileLinks {
                        display: flex;
                        flex-direction: column;
                        padding-top: 3rem;
                    }
                        
                    a {
                        color: inherit;
                        display: block;
                        margin-top: 2rem;
                        width: 100%;
                        text-align: center;
                        margin-right: 0;
                        font-size: 20pt;
                    }
                }
                
                input[type=checkbox]:checked ~ .MobileNavigation {
                    visibility: visible;
                    opacity: 1;
                }
                
                input[type=checkbox]:checked ~ .Line1 {
                    transform: rotate(45deg);
                    top: 50%;
                    left: calc(-1 * (1.25rem * sqrt(2) - 1.25rem) / 2);
                    width: calc(1.25rem * sqrt(2) * 0.95);
                }
                
                input[type=checkbox]:checked ~ .Line2 {
                    opacity: 0;
                }
                
                input[type=checkbox]:checked ~ .Line3 {
                    transform: rotate(-45deg);
                    top: 50%;
                    left: calc(-1 * (1.25rem * sqrt(2) - 1.25rem) / 2);
                    width: calc(1.25rem * sqrt(2) * 0.95);
                }
            }
        }
    }

    @@media (prefers-color-scheme: dark) {
        #@bodyId, html {
            color-scheme: dark;        
            background-color: @CssConstants.DarkModeBackgroundColor;
            color: @CssConstants.DarkModeTextColor !important;
        }
        
        .HamburgerMenu .MobileNavigation {
            background-color: #222 !important;
        
            a {
                color: @CssConstants.DarkModeTextColor !important;
            }
        }  
    }
    
    @@media (max-width: 600px) {
        .HamburgerMenu {
            display: block !important;
        }
    
        .TopNavigation > .PageLink {
            display: none;
        }
    }
</style>

<header>
    <nav class="TopNavigation">
        <img class="LeftFlourish" src="~/img/LeftFlourish.svg">
        <a class="SiteLink" href="~/">ReformedHistory.com</a>
        <div class="Expander"></div>
        <a class="PageLink" href="~/Home">Home</a>
        <a class="PageLink" href="~/Timeline/">Timeline</a>
        <!--<a href="~/Quotes">Quotes</a>-->
        
        <label class="HamburgerMenu" for="HamburgerMenuToggle">
            <input id="HamburgerMenuToggle" type="checkbox" />
            <div class="Line1"></div>
            <div class="Line2"></div>
            <div class="Line3"></div>
            <nav class="MobileNavigation">
                <div class="MobileLinks">
                    <a class="PageLink" href="~/Home">Home</a>
                    <a class="PageLink" href="~/Timeline/">Timeline</a>
                </div>
            </nav>
        </label>
        
        <img class="RightFlourish" src="~/img/RightFlourish.svg">
    </nav>
</header>

<main>
    @RenderBody()
</main>

<!-- Include the site's javascript -->
<script src="~/js/site.js" asp-append-version="true"></script>

<!-- Include htmx -->
<script src="~/js/htmx.js"></script>

@await RenderSectionAsync("Scripts", required: false)

</body>
</html>