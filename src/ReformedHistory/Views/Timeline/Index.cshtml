@using ReformedHistory.Common.Services
@model TimelineFilters
@inject IdService ids

@{
    ViewData["Title"] = "Reformed History - Timeline";
    Layout = "TripleColumnLayout";

    var model = this.Model ?? TimelineFilters.Default;
    var id = ids.GetUniqueId();
}

@section Sidebar1 {
    <div id="@id">
        <style>
            #@id {
                font-family: @Html.Raw(CssConstants.DocumentFont);        
            
                .CheckboxContainer {
                    display: flex;
                    flex-wrap: wrap;
                }
                
                .CheckboxGroup {
                    margin-bottom: 1rem;
                    margin-right: 2rem;
                }
            
                h1 {
                    font-size: 20pt;
                    margin-bottom: 1rem;
                    text-align: center;
                }
            
                h2 {
                    font-size: 13pt;
                    line-height: 15pt;
                    font-weight: bold;
                    margin-bottom: 6pt;
                }
            
                .checkbox {
                    margin-bottom: 4pt;
                    font-size: 12pt;
                    line-height: 1.1;
                    display: grid;
                    grid-template-columns: 1em auto;
                    gap: 0.5em;                    
                    
                    input[type=checkbox] {
                        --border-width: 1px;
                    
                        appearance: none;                        
                        background-color: white;
                        margin: 0;
                        font: inherit;
                        color: currentcolor;
                        width: 1.15em;
                        height: 1.15em;
                        border: var(--border-width) solid @CssConstants.HeaderColor;
                        border-radius: 3px;
                        transform: translateY(calc(-1 * var(--border-width) / 2));
                        
                        display: grid;
                        place-content: center;               
                    }
                    
                    input[type=checkbox]::before {
                        content: "";
                        width: 0.65em;
                        height: 0.65em;
                        transform: scale(0);
                        box-shadow: inset 1em 1em @CssConstants.HeaderColor;
                        transform-origin: bottom left;
                        clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
                        transition: transform 100ms ease-in-out;       
                    }
                        
                    input[type=checkbox]:checked::before {
                        transform: scale(1);
                    }
                    
                    label {
                        user-select: none;
                    }
                }                     
            
                input[type=text] {
                    font-size: 12pt;
                    font-family: "Arial";
                    border: 1px solid @CssConstants.HeaderColor;
                    border-radius: 3px;
                    height: 25px;
                    width: calc(100% - 1rem);
                    padding-left: 4px;
                    background-color: white;
                    margin-bottom: 1rem;
                }
            }
        </style>
        
        <form hx-post="/Timeline/Content"
              hx-trigger="change, keyup"
              hx-target=".ContentPanel"
              hx-swap="innerHTML">

            <h1>Filter Timeline</h1>

            <h2>Search</h2>
            <input id="TextSearch"
                   name="TextSearch"
                   type="text"
                   value=""/>

            <div class="CheckboxContainer">
                <div class="CheckboxGroup">
                    <h2>Tradition</h2>
                    <div class="checkbox">
                        <input id="ReformedCheckbox"
                               name="ReformedCheckbox"
                               type="checkbox"
                               value="true"
                               @(model.Tradition.HasFlag(TimelineEventTradition.Reformed) ? "checked" : "")>

                        <label for="ReformedCheckbox">Reformed</label>
                    </div>
                    <div class="checkbox">
                        <input id="LutheranCheckbox"
                               name="LutheranCheckbox"
                               type="checkbox"
                               value="true"
                               @(model.Tradition.HasFlag(TimelineEventTradition.Lutheran) ? "checked" : "")>

                        <label for="LutheranCheckbox">Lutheran</label>
                    </div>
                    <div class="checkbox">
                        <input id="AnglicanCheckbox"
                               name="AnglicanCheckbox"
                               type="checkbox"
                               value="true"
                               @(model.Tradition.HasFlag(TimelineEventTradition.Anglican) ? "checked" : "")>

                        <label for="AnglicanCheckbox">Anglican</label>
                    </div>
                </div>

                <div class="CheckboxGroup">
                    <h2>Era</h2>
                    <div class="checkbox">
                        <input id="ReformationCheckbox"
                               name="ReformationCheckbox"
                               type="checkbox"
                               value="true"
                               @(model.Era.HasFlag(TimelineEventEra.Reformation) ? "checked" : "")>

                        <label for="ReformationCheckbox">Reformation</label>
                    </div>
                    <div class="checkbox">
                        <input id="MedievalCheckbox"
                               name="MedievalCheckbox"
                               type="checkbox"
                               value="true"
                               @(model.Era.HasFlag(TimelineEventEra.Medieval) ? "checked" : "")>

                        <label for="MedievalCheckbox">Medieval</label>
                    </div>
                    <div class="checkbox">
                        <input id="AncientCheckbox"
                               name="AncientCheckbox"
                               type="checkbox"
                               value="true"
                               @(model.Era.HasFlag(TimelineEventEra.Ancient) ? "checked" : "")>

                        <label for="AncientCheckbox">Ancient</label>
                    </div>
                </div>

                <div class="CheckboxGroup">
                    <h2>Type</h2>
                    <div class="checkbox">
                        <input id="DocumentCheckbox"
                               name="DocumentCheckbox"
                               type="checkbox"
                               value="true"
                               @(model.Type.HasFlag(TimelineEventType.Confession) ? "checked" : "")>

                        <label for="DocumentCheckbox">Confessions</label>
                    </div>
                    <div class="checkbox">
                        <input id="LetterCheckbox"
                               name="LetterCheckbox"
                               type="checkbox"
                               value="true"
                               @(model.Type.HasFlag(TimelineEventType.Letter) ? "checked" : "")>

                        <label for="LetterCheckbox">Letters</label>
                    </div>
                    <div class="checkbox">
                        <input id="CouncilCheckbox"
                               name="CouncilCheckbox"
                               type="checkbox"
                               value="true"
                               @(model.Type.HasFlag(TimelineEventType.Council) ? "checked" : "")>

                        <label for="CouncilCheckbox">Councils</label>
                    </div>
                    <div class="checkbox">
                        <input id="SermonCheckbox"
                               name="SermonCheckbox"
                               type="checkbox"
                               value="true"
                               @(model.Type.HasFlag(TimelineEventType.Sermon) ? "checked" : "")>

                        <label for="SermonCheckbox">Sermons</label>
                    </div>
                    <div class="checkbox">
                        <input id="CatechismCheckbox"
                               name="CatechismCheckbox"
                               type="checkbox"
                               value="true"
                               @(model.Type.HasFlag(TimelineEventType.Catechism) ? "checked" : "")>

                        <label for="CatechismCheckbox">Catechisms</label>
                    </div>
                    <div class="checkbox">
                        <input id="CommentaryCheckbox"
                               name="CommentaryCheckbox"
                               type="checkbox"
                               value="true"
                               @(model.Type.HasFlag(TimelineEventType.Commentary) ? "checked" : "")>

                        <label for="CommentaryCheckbox">Commentaries</label>
                    </div>
                </div>
            </div>
        </form>
    </div>
}

<div class="ContentPanel">
    <partial name="Content" model="model" />
</div>

