@using ReformedHistory.Common.Services
@model TimelineInfo.Event
@inject IdService ids

@{
    var id = ids.GetUniqueId();
}

<div id="@id">
    <div class="row spacingRow">
        <div class="left"></div>
        <div class="middle"><div class="line"></div></div>
        <div class="right"></div>
    </div>
    
    <div class="row headerRow">
        <div class="left">
            @if (Model.DateStart == Model.DateEnd) {
                <div class="date">@Model.DateStart</div>
            }
            else {
                <div class="date">@(Model.DateStart)â€”@(Model.DateEnd)</div>
            }
        </div>

        <div class="middle">
            <div class="line"></div>
            <div class="circle"></div>
        </div>

        <div class="right">
            @if (string.IsNullOrWhiteSpace(this.Model.Url)) {
                <div class="title">@Model.Title</div>
            }
            else {
                <div class="title"><a href="@Url.Content(Model.Url)">@Model.Title</a></div>
            }
        </div>
    </div>

    <div class="row contentRow">
        <div class="left"></div>

        <div class="middle">
            <div class="line"></div>
        </div>

        <div class="right">
            <div class="content">
                <span>@Model.Description</span>
            </div>
        </div>
    </div>

    <style>
        #@id {
            --circle-diameter: @TimelineCss.MiddleWidth;
            --vertical-margin: 1rem;
            
            .spacingRow {
                .middle {
                    height: var(--vertical-margin);
                }
            }
            
            .contentRow {
                .content {
                    margin-left: 1rem;
                    margin-top: 4pt;
                    margin-bottom: var(--vertical-margin);
                    
                    span {
                        font-size: 13pt;
                        line-height: 14pt;
                        font-style: italic;
                        font-family: @Html.Raw(CssConstants.DocumentFont);
                    }
                }
            }
            
            .headerRow {                
                .middle {
                    display: flex;
                    align-items: center;
                }
            
                .date {
                    font-size: 18pt;
                    height: 100%;
                    display: flex;
                    flex-direction: row-reverse;
                    align-items: center;
                    text-align: center;
                    margin-right: 1rem;
                    letter-spacing: 4pt;
                    font-family: @Html.Raw(CssConstants.DocumentFont);
                }
                
                .title {
                    font-size: 20pt;
                    line-height: 22pt;
                    letter-spacing: 1pt;
                    height: 100%;
                    display: flex;
                    align-items: center;
                    text-align: left;
                    margin-left: 1rem;
                    text-wrap: balance;
                    font-family: @Html.Raw(CssConstants.DocumentFont);    
                    font-weight: 550;                
                }
                
                a {
                    color: black;
                    text-decoration: none;
                }                    
            
                a:hover {
                    text-decoration: underline;
                }
            }           
            
            .circle {
                width: calc(var(--circle-diameter) - 2 * @TimelineCss.LineThickness);
                height: calc(var(--circle-diameter) - 2 * @TimelineCss.LineThickness);
                background-color: white;
                border-radius: 50%;
                border: @TimelineCss.LineThickness solid @TimelineCss.LineColor;
                margin: auto;
                z-index: 5;
            }
        }
    </style>
</div>
